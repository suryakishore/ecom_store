apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.gms.google-services'
apply from: "$rootDir/version.gradle"
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: "$rootDir/ktlint.gradle"
apply plugin: 'checkstyle'

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.shoppd.shopper"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 2
        versionName "1.0.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "int", "LIMIT", "100"
        buildConfigField "String", "BASEURL", "\"https://api.shoppd.net/v1/\""
        buildConfigField "String", "ADD_PRODUCT_BASEURL", "\"https://api.shoppd.net/python/\""
        buildConfigField "String", "NYAPIBASEURL", "\"https://nyapi.shoppd.net/v1/\""
        buildConfigField "String", "PHYTHON_BASEURL", "\"https://pyfilterapi.shoppd.net/python/\""
        buildConfigField "String", "BASE", "\"https://api.shoppd.net/v1/\""
        buildConfigField "String", "BUCKET_NAME", "\"shoppd\""
        buildConfigField "int", "CACHETIME", "432000"
        buildConfigField "String", "SERVER_KEY", "\"AIzaSyCm8AXXyqQUbWwa9OZewQBxIyZuJHaxz1I\""
        buildConfigField "String", "AMAZON_BASE_URL", "\"https://shoppd.s3.ap-south-1.amazonaws.com/\""
        buildConfigField "String", "CLIENT_PASSWORD", "\"3Embed\""
        buildConfigField "String", "MQTT_HOST", "\"websocket.shoppd.net\""
        buildConfigField "String", "MQTT_PORT", "\"2053\""
        buildConfigField "String", "SSL_URL", "\"ssl://websocket.shoppd.net:2053\""
        buildConfigField "String", "MQTT_USERNAME", "\"shoppdVernMq\""
        buildConfigField "String", "MQTT_PASSWORD", "\"MvYt2hzTxwBU6eyj\""
        multiDexEnabled true
        resValue "string", "APP_ID", "com.shoppd.shopper"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    repositories {
        maven { url "https://repo.eclipse.org/content/repositories/paho-releases/" }
        maven { url "https://repo.eclipse.org/content/repositories/paho-snapshots/" }
        maven { url "https://jitpack.io" }

    }
    /*compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }*/
    dataBinding {
        enabled = true
    }
    viewBinding {
        enabled = true
    }
}


checkstyle {
    configFile rootProject.file('commonFiles/codestyle/google_checks.xml')
    toolVersion = "8.4"
    showViolations true
    ignoreFailures false
}
task checkStyle(type: Checkstyle) {
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    exclude '**/BuildConfig.java'
    exclude '**/R.java'
    exclude '**/models/**'
    exclude '**/mData/**'
    exclude '**/test/**'
    exclude '**/androidTest/**'
    showViolations true
    classpath = files()
    reports {
        xml.enabled true
        html.enabled true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    // noinspection GradleCompatible
    implementation "androidx.appcompat:appcompat:${appcompact}"
    implementation "androidx.constraintlayout:constraintlayout:${constraintLayout}"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation "junit:junit:${testImplementation}"
    androidTestImplementation "androidx.test.ext:junit:${androidTestImplementation}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${espressoTestImplementation}"
    implementation "android.arch.lifecycle:extensions:1.1.0"

    //data binding
    implementation "com.google.android:flexbox:2.0.0"
    // implementation "android.arch.lifecycle:viewmodel:1.1.0"

    // Butterknife
    implementation "com.jakewharton:butterknife:${butterKnife}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${butterKnife}"

    // Dependency Injection
    implementation "com.google.dagger:dagger-android:${daggerVersion}"
    implementation "com.google.dagger:dagger-android-support:${daggerVersion}"
    implementation "com.google.dagger:dagger:${daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-android-processor:${daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"
    compileOnly "javax.annotation:jsr250-api:${javaxAnnotation}"

    // Material Designing
    implementation "com.google.android.material:material:${materialDesign}"

    // CardView
    implementation "androidx.cardview:cardview:${materialDesign}"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:${retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofit}"

    //RXjava 2
    implementation "io.reactivex.rxjava2:rxandroid:${rxJava}"
    compileOnly "javax.annotation:jsr250-api:${javaxAnnotation}"
    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:${retorfitRxJava}"

    // aws
    implementation "com.amazonaws:aws-android-sdk-cognito:${awsVersion}"
    implementation "com.amazonaws:aws-android-sdk-s3:${awsVersion}"

    // FCM
    implementation "com.google.firebase:firebase-core:${firebaseCore}"
    implementation "com.google.firebase:firebase-messaging:${firebaseMessaging}"
    implementation "com.google.firebase:firebase-analytics:${firebaseCore}"
    implementation "com.google.firebase:firebase-crashlytics:${crashlyticsVersion}"

    implementation 'com.squareup.okhttp3:logging-interceptor:3.4.1'

    // calender view
    implementation "com.squareup:android-times-square:${squareUp}"

    // glide
    implementation("com.github.bumptech.glide:glide:${glide}") {
        exclude group: "com.android.support"
    }

    // live-chat
    implementation files('libs/LiveChatWindow.jar')
    implementation project(':simplecroplib')
    implementation project(':android-reactive-location')

    // mqtt
    implementation "org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.2"
    implementation "org.eclipse.paho:org.eclipse.paho.android.service:1.1.1"

    // google
    implementation "com.google.android.gms:play-services-maps:${googleServices}"
    implementation "com.google.android.gms:play-services-location:${googleServices}"
    implementation "com.google.android.gms:play-services-places:${googleServices}"
    implementation "androidx.security:security-crypto:${crypto}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'com.google.firebase:firebase-ml-vision:24.0.3'
    implementation 'com.google.firebase:firebase-ml-vision-barcode-model:16.1.1'

    //country code
    implementation 'com.hbb20:ccp:2.3.2'

    implementation 'com.github.amarjain07:StickyScrollView:1.0.2'


}
